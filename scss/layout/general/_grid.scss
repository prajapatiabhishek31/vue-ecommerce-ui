@use "sass:math";

$grid-cols: 12;
$gap-count: 1, 1, 4; // (min-gap-count, step, max-gap-count) // to generate gap count utility classes
$gap-size: 1, 2, 6; // (starting size, step, max size) // to generate gap utility classes

.l-row {
    --gap-count: 0;
    --gap: 0%;
    display: flex;
    flex-flow: row wrap;
    gap: var(--gap);
}

.l-col {
    width: 100%;

    &-auto {
        width: auto;
    }

    @for $i from 1 through $grid-cols {
        &-#{$i} {
            $w: math.div(100, $grid-cols)*$i*1%;
            width: calc($w - (var(--gap)*var(--gap-count))/(var(--gap-count) + 1));
        }
    } 

    @include generate-responsive-classes() using ($bp-name) {
        @for $i from 1 through $grid-cols {
            &-#{$i}\:#{$bp-name} {
                $w: math.div(100, $grid-cols)*$i*1%;
                width: calc($w - (var(--gap)*var(--gap-count))/(var(--gap-count) + 1));
            }
        } 
    }
}

.l-gap {
    @include for-step($gap-size) using ($current) {
        &-#{$current} {
            --gap: #{$current*1em};
        }                    
    }

    @include generate-responsive-classes() using ($bp-name) {
        @include for-step($gap-size) using ($current) {                    
            &-#{$current}\:#{$bp-name} {
                --gap: #{$current*1em};
            } 
        }
    }
}

.l-col-gap-count {
    @include for-step($gap-count) using ($current) {
        &-#{$current} {
            --gap-count: #{$current};
        }                    
    }

    @include generate-responsive-classes() using ($bp-name) {
        @include for-step($gap-count) using ($current) {                    
            &-#{$current}\:#{$bp-name} {
                --gap-count: #{$current};
            } 
        }
    }
}